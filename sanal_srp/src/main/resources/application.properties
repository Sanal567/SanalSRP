# jdbc X
#jdbc.driverClassName=com.mysql.jdbc.Driver
#jdbc.url=jdbc:mysql://localhost:3306/vema
#javax.persistence.jdbc.driver
#javax.persistence.jdbc.url
#javax.persistence.jdbc.user
#javax.persistence.jdbc.password

hibernate.connection.driver_class=org.postgresql.Driver
hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres
hibernate.connection.username=postgres
hibernate.connection.password=kjhgfdsa
#hibernate.connection.autocommit

#hibernate.X
#hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=none
#validate
#create-drop | create | validate | update | none | create-only | drop
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.implicit_naming_strategy=jpa
hibernate.format_sql=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.enable_lazy_load_no_trans=true
#hibernate.default_schema=sanal
#javax.persistence.schema-generation.database.action
#hibernate.max_fetch_depth
#hibernate.default_catalog

#hibernate.use_sql_comments
hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
#com.zaxxer.hikari.hibernate.HikariConnectionProvider
maxLifetime=1800000 
#hibernate.hikari.minimumIdle=5 - not recommended
#hibernate.hikari.maximumPoolSize=10
#hibernate.hikari.idleTimeout=30000 default 600000 
dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
#schema
#leakDetectionThreshold=0
#poolName
#validationTimeout=5000
#autoCommit =true
#hibernate.hikari.dataSourceClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#hibernate.hikari.dataSourceClassName=com.zaxxer.hikari.HikariDataSource
#hibernate.hikari.dataSource.url=
#hibernate.hikari.dataSource.url=jdbc:mysql://localhost/database
#hibernate.hikari.dataSource.user=bart
#hibernate.hikari.dataSource.password=51mp50n
 #<prop key="hibernate.c3p0.min_size">5</prop>
 
        #<prop key="hibernate.c3p0.timeout">300</prop>
        #<prop key="hibernate.c3p0.max_statements">50</prop>
        #<prop key="hibernate.c3p0.idle_test_period">600<

# <property name="connectionTestQuery" value="SELECT 1" />

#To integrate the JCache API and Ehcache with Hibernate, you need to specify the following configuration properties.
#1 - Enable second level cache (you can skip this property because default value is true for it).
hibernate.cache.use_second_level_cache=true
#2- Specify cache region factory class. 
 hibernate.cache.region.factory_class = org.hibernate.cache.jcache.JCacheRegionFactory
 #org.hibernate.cache.ehcache.EhCacheRegionFactory
 #3 - Specify cache provider.
hibernate.javax.cache.provider = org.ehcache.jsr107.EhcacheCachingProvider
hibernate.cache.use_query_cache=true
hibernate.generate_statistics=true
javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
#spring.datasource.hikari.connectionTimeout=30000
#spring.datasource.hikari.idleTimeout=600000
#spring.datasource.hikari.maxLifetime=1800000
 #<entry key="connection.url" value="${dataSource.url}" />
  #  <entry key="connection.driver_class" value="${dataSource.driverClassName}" />
   # <entry key="connection.username" value="${dataSource.username}" />
   # <entry key="connection.password" value="${dataSource.password}" />
   #<entry key="hibernate.jdbc.batch_size" value="100" />
    #<entry key="hibernate.order_inserts" value="true" />
    #<entry key="hibernate.order_updates" value="true" />